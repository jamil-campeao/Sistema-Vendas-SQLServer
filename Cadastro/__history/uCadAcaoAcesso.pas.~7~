unit uCadAcaoAcesso;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Utelaheranca, Data.DB,
  ZAbstractRODataset, ZAbstractDataset, ZDataset, Vcl.Grids, Vcl.DBGrids,
  Vcl.StdCtrls, Vcl.Mask, Vcl.ComCtrls, Vcl.DBCtrls, Vcl.Buttons, Vcl.ExtCtrls, cAcaoAcesso, uEnum,
  UDtmConexao;

type
  Tfrm_cadacaoacesso = class(Tfrm_heranca)
    qry_listagemACAOACESSOID: TIntegerField;
    qry_listagemDESCRICAO: TWideStringField;
    qry_listagemCHAVE: TWideStringField;
    edt_descricao: TLabeledEdit;
    edt_acaoacessoid: TLabeledEdit;
    edt_chave: TLabeledEdit;
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    oAcaoAcesso:TAcaoAcesso;
    function Gravar(EstadodoCadastro:TEstadodoCadastro):Boolean; override;
    function Apagar:Boolean; override;
  end;

  var
  frm_cadacaoacesso: Tfrm_cadacaoacesso;

implementation

{$R *.dfm}

function Tfrm_cadacaoacesso.Apagar: Boolean;
begin
 if oAcaoAcesso.Selecionar(Qry_Listagem.FieldByName('ACAOACESSOID').AsInteger) then
  begin
    Result:=oAcaoAcesso.Apagar;
  end;

end;

procedure Tfrm_cadacaoacesso.FormCreate(Sender: TObject);
begin
  inherited;
  oAcaoacesso:= TAcaoacesso.Create(DTMPrincipal.ConexaoDB);
  IndiceAtual:='DESCRICAO';
end;

function Tfrm_cadacaoacesso.Gravar(
  EstadodoCadastro: TEstadodoCadastro): Boolean;
begin
  if EstadodoCadastro=EcInserir then
  Result:= oAcaoAcesso.Inserir
  else if EstadodoCadastro=ecAlterar then
       Result:= oAcaoacesso.Atualizar;
end;

end.
