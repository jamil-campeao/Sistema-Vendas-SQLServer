unit uLogin;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons, cUsuario, UDtmConexao;

type
  Tfrm_login = class(TForm)
    Label1: TLabel;
    edt_usuario: TEdit;
    edt_senha: TEdit;
    Label2: TLabel;
    btn_fechar: TBitBtn;
    btn_acessar: TBitBtn;
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure FormShow(Sender: TObject);
    procedure btn_fecharClick(Sender: TObject);
    procedure btn_acessarClick(Sender: TObject);
  private
  bFechar:Boolean;
    procedure FecharFormulario;
    procedure FecharAplicacao;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frm_login: Tfrm_login;

implementation

{$R *.dfm}

procedure Tfrm_login.btn_acessarClick(Sender: TObject);
var oUsuario:TUsuario;
begin
  try
   oUsuario:=TUsuario.Create(dtmPrincipal.ConexaoDB);
   if oUsuario.Logar(edt_usuario.Text,edt_senha.Text) then
    begin
      FecharFormulario
    end

      else
      begin
        MessageDlg('Usuário Inválido ou senha inválida',mtInformation,[mbOK],0);
        edt_usuario.SetFocus;
      end;

  finally
    if Assigned(oUsuario) then
      FreeandNil(oUsuario);
  end;
end;

procedure Tfrm_login.FecharFormulario;
begin
  bfechar := True;
  Close;
end;

procedure Tfrm_login.FecharAplicacao;
begin
  bFechar := True;
  Application.Terminate;
end;

procedure Tfrm_login.btn_fecharClick(Sender: TObject);
begin
  FecharAplicacao;
  end;


procedure Tfrm_login.FormCloseQuery(Sender: TObject; var CanClose: Boolean);
begin
  CanClose:= bFechar;
end;

procedure Tfrm_login.FormShow(Sender: TObject);
begin
 bFechar:=False;
end;

end.
